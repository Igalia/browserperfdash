# -*- coding: utf-8 -*-
# Generated by Django 1.10.4 on 2016-12-15 17:43
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Bot',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('password', models.CharField(max_length=100, unique=True, verbose_name='Bot Password')),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Bot Name')),
                ('cpuDetail', models.CharField(blank=True, max_length=100, verbose_name='CPU Details')),
                ('gpuDetail', models.CharField(blank=True, max_length=100, verbose_name='CPU Details')),
                ('platformDetail', models.CharField(blank=True, max_length=100, verbose_name='CPU Details')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='BotReportData',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('browser_version', models.CharField(blank=True, max_length=50, verbose_name='Browser Version')),
                ('test_version', models.CharField(blank=True, max_length=50, verbose_name='Test Version')),
                ('aggregation', models.CharField(choices=[('na', 'None'), ('tt', 'Total'), ('am', 'Arithmetic'), ('gm', 'Geometric')], default='na', max_length=2, verbose_name='Aggregation')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('value', models.FloatField(blank=True, null=True, verbose_name='Value')),
                ('bot', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Bot')),
            ],
        ),
        migrations.CreateModel(
            name='Browser',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Browser Id')),
                ('name', models.CharField(max_length=50, verbose_name='Browser Name')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='CPUArchitecture',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='CPU Architecture Name')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='GPUType',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='GPU Type Name')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='MetricUnit',
            fields=[
                ('name', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Metric Name')),
                ('unit', models.CharField(blank=True, max_length=10, verbose_name='Metric Unit')),
                ('description', models.CharField(blank=True, max_length=150, verbose_name='Metric Description')),
                ('prefix', models.CharField(blank=True, max_length=50, verbose_name='Metric Prefix')),
                ('is_better', models.CharField(choices=[('dw', 'Down'), ('up', 'Up')], default='dw', max_length=2, verbose_name='Is Better')),
            ],
        ),
        migrations.CreateModel(
            name='Platform',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=50, unique=True, verbose_name='Platform Name')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Test',
            fields=[
                ('id', models.CharField(max_length=50, primary_key=True, serialize=False, verbose_name='Test Id')),
                ('description', models.CharField(blank=True, max_length=150, verbose_name='Test Description')),
                ('url', models.CharField(blank=True, max_length=150, verbose_name='Test URL')),
                ('enabled', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='botreportdata',
            name='browser',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Browser'),
        ),
        migrations.AddField(
            model_name='botreportdata',
            name='metric_tested',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.MetricUnit'),
        ),
        migrations.AddField(
            model_name='botreportdata',
            name='test',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Test'),
        ),
        migrations.AddField(
            model_name='bot',
            name='cpuArchitecture',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.CPUArchitecture'),
        ),
        migrations.AddField(
            model_name='bot',
            name='gpuType',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.GPUType'),
        ),
        migrations.AddField(
            model_name='bot',
            name='platform',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='dashboard.Platform'),
        ),
    ]
